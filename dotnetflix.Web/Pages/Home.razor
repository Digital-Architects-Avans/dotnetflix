@page "/"
@using dotnetflix.Web.Services.Contracts
@using dotnetflix.Models.Dtos.Show

<h3>Nu in de bioscoop!</h3>

@if (Shows != null)
{
    var showCount = Shows.Count();

    if (showCount > 0)
    {
        var groupedShowsByMovie = from show in Shows
            group show by show.MovieId
            into showGroup
            orderby showGroup.Key
            select showGroup;

        @foreach (var showGroup in groupedShowsByMovie)
        {
            var movie = showGroup.First().MovieTitle;
            var movieShows = showGroup.ToList();

            <h4>@movie</h4>

            @foreach (var show in movieShows)
            {
                // only select shows that are today
                if (show.Date.Date == DateTime.Today)
                {
                    <p>@show.Date</p>
                }
            }
        }
    }
    else
    {
        <h3>Geen films gevonden</h3>
    }
}
else
{
    <h3>Loading</h3>
}

@code {
    // 1) Set properties te facilitate dependency injection
    // 2) Public properties to expose to the view
    // 3) Method to be called when the component is initialized

    [Inject] public IShowService? ShowService { get; set; }

    public IEnumerable<ShowDto>? Shows { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ShowService != null)
        {
            Shows = await ShowService.GetShows();
        }
    }
}